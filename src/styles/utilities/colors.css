
/* src/styles/utilities/colors.css - Streamlined color utility classes */
@layer utilities {
  /* ===== PRIMARY COLOR UTILITIES ===== */
  .text-primary {
    color: hsl(var(--primary));
  }

  .text-primary-foreground {
    color: hsl(var(--primary-foreground));
  }

  .bg-primary {
    background-color: hsl(var(--primary));
  }

  .border-primary {
    border-color: hsl(var(--primary));
  }

  /* ===== STATUS COLOR UTILITIES ===== */
  .text-destructive {
    color: hsl(var(--destructive));
  }

  .text-destructive-foreground {
    color: hsl(var(--destructive-foreground));
  }

  .bg-destructive {
    background-color: hsl(var(--destructive));
  }

  .border-destructive {
    border-color: hsl(var(--destructive));
  }

  .text-success {
    color: hsl(var(--success));
  }

  .text-success-foreground {
    color: hsl(var(--success-foreground));
  }

  .bg-success {
    background-color: hsl(var(--success));
  }

  .border-success {
    border-color: hsl(var(--success));
  }

  /* ===== SEMANTIC COLOR UTILITIES ===== */
  .text-muted {
    color: hsl(var(--muted-foreground));
  }

  .text-muted-foreground {
    color: hsl(var(--muted-foreground));
  }

  .bg-muted {
    background-color: hsl(var(--muted));
  }

  .text-accent {
    color: hsl(var(--accent-foreground));
  }

  .bg-accent {
    background-color: hsl(var(--accent));
  }

  /* ===== FOREGROUND AND BACKGROUND ===== */
  .text-foreground {
    color: hsl(var(--foreground));
  }

  .bg-background {
    background-color: hsl(var(--background));
  }

  /* ===== CARD COLOR UTILITIES ===== */
  .bg-card {
    background-color: hsl(var(--card));
  }

  .text-card-foreground {
    color: hsl(var(--card-foreground));
  }

  .bg-popover {
    background-color: hsl(var(--popover));
  }

  .text-popover-foreground {
    color: hsl(var(--popover-foreground));
  }

  /* ===== BORDER UTILITIES ===== */
  .border-border {
    border-color: hsl(var(--border));
  }

  /* ===== ICON UTILITIES ===== */
  .stroke-primary {
    stroke: hsl(var(--primary));
  }

  .stroke-destructive {
    stroke: hsl(var(--destructive));
  }

  .stroke-success {
    stroke: hsl(var(--success));
  }

  .stroke-muted {
    stroke: hsl(var(--muted-foreground));
  }

  .stroke-foreground {
    stroke: hsl(var(--foreground));
  }

  .fill-primary {
    fill: hsl(var(--primary));
  }

  .fill-destructive {
    fill: hsl(var(--destructive));
  }

  .fill-success {
    fill: hsl(var(--success));
  }

  .fill-muted {
    fill: hsl(var(--muted-foreground));
  }

  .fill-foreground {
    fill: hsl(var(--foreground));
  }

  /* ===== TASK STATUS COLOR UTILITIES ===== */
  .text-task-pending {
    color: var(--status-pending);
  }

  .text-task-overdue {
    color: var(--status-overdue);
  }

  .text-task-complete {
    color: var(--status-complete);
  }

  .bg-task-pending {
    background-color: var(--status-pending);
  }

  .bg-task-overdue {
    background-color: var(--status-overdue);
  }

  .bg-task-complete {
    background-color: var(--status-complete);
  }

  .border-task-pending {
    border-color: var(--status-pending);
  }

  .border-task-overdue {
    border-color: var(--status-overdue);
  }

  .border-task-complete {
    border-color: var(--status-complete);
  }

  /* ===== OPACITY VARIANTS ===== */
  .text-primary\/50 {
    color: hsl(var(--primary) / 0.5);
  }

  .text-destructive\/50 {
    color: hsl(var(--destructive) / 0.5);
  }

  .text-success\/50 {
    color: hsl(var(--success) / 0.5);
  }

  .bg-primary\/10 {
    background-color: hsl(var(--primary) / 0.1);
  }

  .bg-destructive\/10 {
    background-color: hsl(var(--destructive) / 0.1);
  }

  .bg-success\/10 {
    background-color: hsl(var(--success) / 0.1);
  }

  /* ===== GRADIENT UTILITIES ===== */
  .bg-gradient-primary {
    background: var(--gradient-blue);
  }

  .bg-gradient-primary-dark {
    background: var(--gradient-blue-dark);
  }

  .bg-gradient-light {
    background: var(--gradient-light);
  }

  /* ===== HIGH CONTRAST MODE SUPPORT ===== */
  @media (forced-colors: active) {
    .text-primary,
    .text-destructive,
    .text-success,
    .text-foreground {
      color: CanvasText;
    }

    .bg-primary,
    .bg-destructive,
    .bg-success,
    .bg-background,
    .bg-card {
      background-color: Canvas;
    }

    .border-primary,
    .border-destructive,
    .border-success,
    .border-border {
      border-color: CanvasText;
    }

    .stroke-primary,
    .stroke-destructive,
    .stroke-success,
    .stroke-foreground {
      stroke: CanvasText;
    }

    .fill-primary,
    .fill-destructive,
    .fill-success,
    .fill-foreground {
      fill: CanvasText;
    }
  }
}
