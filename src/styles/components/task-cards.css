
/* src/styles/components/task-cards.css - Enhanced task card styling using consolidated colors */
@layer components {
  /* ===== ENHANCED TASK CARD STYLES ===== */
  .task-card {
    @apply flex flex-col p-4 sm:p-5 transition-all duration-300 relative text-left;
    min-height: calc(1.25 * 60px);
    width: 100%;
    border-radius: var(--radius-xl);
    background-color: hsl(var(--card));
    color: hsl(var(--card-foreground));
    border: 1.5px solid hsl(var(--border) / 0.4);
    box-shadow: var(--shadow);
    backdrop-filter: blur(8px);
    cursor: pointer;
    position: relative;
    overflow: hidden;
  }

  /* Enhanced hover effects */
  .task-card:hover {
    box-shadow: var(--shadow-lg), 0 0 0 1px hsl(var(--primary) / 0.3);
    border-color: hsl(var(--primary) / 0.5);
    transform: translateY(-2px) scale(1.01);
    background-color: hsl(var(--card) / 0.95);
  }

  /* Enhanced focus states */
  .task-card:focus-within {
    outline: 2px solid hsl(var(--primary));
    outline-offset: 2px;
    box-shadow: var(--shadow-xl), var(--shadow-focus);
    transform: translateY(-3px);
    z-index: 10;
  }

  /* Active state */
  .task-card:active {
    transform: translateY(-1px) scale(0.99);
    transition-duration: 0.1s;
  }

  /* Shimmer effect */
  .task-card::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    transition: left 0.6s ease;
    z-index: 1;
  }

  .task-card:hover::before {
    left: 100%;
  }

  .task-card > * {
    position: relative;
    z-index: 2;
  }

  @media (min-width: 640px) {
    .task-card {
      width: 100%;
      padding: 1.25rem 1.5rem;
    }
    
    .task-card:hover {
      transform: translateY(-3px) scale(1.02);
    }
  }

  /* ===== TASK STATE STYLES ===== */
  .task-card-expanded {
    border-color: hsl(var(--primary) / 0.8);
    box-shadow: var(--shadow-xl), 0 0 0 2px hsl(var(--primary) / 0.3);
    transform: translateY(-4px) scale(1.02);
    background-color: hsl(var(--card));
    z-index: 20;
  }

  .task-card-complete {
    border-color: hsl(var(--success) / 0.6);
    background: linear-gradient(135deg, hsl(var(--card)), hsl(var(--success) / 0.05));
    box-shadow: var(--shadow), 0 0 0 1px hsl(var(--success) / 0.3);
  }

  .task-card-complete:hover {
    box-shadow: var(--shadow-md), 0 0 0 1px hsl(var(--success) / 0.5);
    border-color: hsl(var(--success) / 0.8);
  }

  .task-card-overdue {
    border-color: hsl(var(--destructive) / 0.6);
    background: linear-gradient(135deg, hsl(var(--card)), hsl(var(--destructive) / 0.05));
    box-shadow: var(--shadow), 0 0 0 1px hsl(var(--destructive) / 0.3);
  }

  .task-card-overdue:hover {
    box-shadow: var(--shadow-md), 0 0 0 1px hsl(var(--destructive) / 0.5);
    border-color: hsl(var(--destructive) / 0.8);
  }

  .task-card-pending {
    border-color: hsl(var(--accent-yellow) / 0.6);
    background: linear-gradient(135deg, hsl(var(--card)), hsl(var(--accent-yellow) / 0.05));
    box-shadow: var(--shadow), 0 0 0 1px hsl(var(--accent-yellow) / 0.3);
  }

  .task-card-pending:hover {
    box-shadow: var(--shadow-md), 0 0 0 1px hsl(var(--accent-yellow) / 0.5);
    border-color: hsl(var(--accent-yellow) / 0.8);
  }

  .task-card-pinned {
    border-color: hsl(var(--primary) / 0.8);
    background: linear-gradient(135deg, hsl(var(--card)), hsl(var(--primary) / 0.08));
    box-shadow: var(--shadow-md), 0 0 0 2px hsl(var(--primary) / 0.2);
  }

  .task-card-pinned:hover {
    box-shadow: var(--shadow-lg), 0 0 0 2px hsl(var(--primary) / 0.4);
  }

  .task-card-pinned::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: var(--gradient-blue);
    border-radius: var(--radius-xl) var(--radius-xl) 0 0;
    z-index: 3;
  }

  /* ===== DARK MODE TASK CARDS ===== */
  .dark .task-card {
    background-color: hsl(var(--card));
    border: 1px solid hsl(var(--border) / 0.5);
    box-shadow: var(--shadow);
  }

  .dark .task-card:hover {
    background-color: hsl(var(--card) / 0.9);
    border-color: hsl(var(--primary) / 0.7);
    box-shadow: var(--shadow-lg), 0 0 0 1px hsl(var(--primary) / 0.4);
  }

  .dark .task-card::before {
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.05), transparent);
  }

  .dark .task-card-complete {
    background: linear-gradient(135deg, hsl(var(--card)), hsl(var(--success) / 0.1));
    border-color: hsl(var(--success) / 0.4);
  }

  .dark .task-card-complete:hover {
    box-shadow: var(--shadow-md), 0 0 0 1px hsl(var(--success) / 0.6);
  }

  .dark .task-card-overdue {
    background: linear-gradient(135deg, hsl(var(--card)), hsl(var(--destructive) / 0.1));
    border-color: hsl(var(--destructive) / 0.4);
  }

  .dark .task-card-overdue:hover {
    box-shadow: var(--shadow-md), 0 0 0 1px hsl(var(--destructive) / 0.6);
  }

  /* ===== SCROLLBAR HIDING ===== */
  .task-card-container::-webkit-scrollbar,
  .task-list::-webkit-scrollbar {
    display: none;
  }

  .task-card-container,
  .task-list {
    scrollbar-width: none;
    -ms-overflow-style: none;
  }

  /* ===== ANIMATIONS ===== */
  .task-card-enter {
    opacity: 0;
    transform: translateY(20px) scale(0.9);
  }

  .task-card-enter-active {
    opacity: 1;
    transform: translateY(0) scale(1);
    transition: opacity 0.4s ease, transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .task-card-exit {
    opacity: 1;
    transform: translateY(0) scale(1);
  }

  .task-card-exit-active {
    opacity: 0;
    transform: translateY(-20px) scale(0.9);
    transition: opacity 0.3s ease, transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* ===== TASK HEADER ENHANCEMENTS ===== */
  .task-header-container {
    transition: all 0.2s ease;
  }

  .task-card:hover .task-header-container {
    transform: translateX(2px);
  }

  /* ===== REDUCED MOTION RESPECT ===== */
  @media (prefers-reduced-motion: reduce) {
    .task-card,
    .task-card::before,
    .task-header-container {
      transition: none !important;
      animation: none !important;
    }
    
    .task-card:hover,
    .task-card:focus-within,
    .task-card-expanded {
      transform: none !important;
    }
    
    .task-card:hover::before {
      left: -100% !important;
    }
  }
}
