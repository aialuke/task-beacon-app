
/* src/styles/components/task-cards.css - Consolidated task card styles */
@layer components {
  /* Main task card class - single source of truth for all styling */
  .task-card {
    @apply bg-card text-card-foreground border border-border p-6 rounded-xl shadow-sm;
    @apply transition-all duration-200 hover:shadow-md cursor-pointer;
    @apply mb-4; /* Default spacing between cards */
    
    /* Critical width constraints */
    max-width: 100%;
    width: 100%;
    box-sizing: border-box;
  }

  /* Task-specific animations using unified system */
  .task-card-enter {
    @apply animate-fade-in;
  }

  .task-card-exit {
    @apply animate-fade-out;
  }

  /* Task-specific indicators */
  .task-card-status-indicator {
    @apply absolute left-0 top-0 h-full w-1;
    border-radius: var(--radius) 0 0 var(--radius);
  }

  /* Priority indicators using border classes */
  .task-card-priority-high {
    @apply border-l-4 border-l-destructive;
  }

  .task-card-priority-medium {
    @apply border-l-4 border-l-primary;
  }

  .task-card-priority-low {
    @apply border-l-4 border-l-success;
  }

  /* Expanded state styling */
  .task-card.expanded {
    @apply transform scale-105 shadow-lg z-10;
  }

  /* Status color utilities - keep these as they use CSS variables */
  .status-pending {
    color: var(--status-pending);
  }

  .status-overdue {
    color: var(--status-overdue);
  }

  .status-complete {
    color: var(--status-complete);
  }

  .status-bg-pending {
    background-color: var(--status-pending);
  }

  .status-bg-overdue {
    background-color: var(--status-overdue);
  }

  .status-bg-complete {
    background-color: var(--status-complete);
  }
}
