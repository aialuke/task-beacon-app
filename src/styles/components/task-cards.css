/* src/styles/components/task-cards.css - Enhanced task card styling with improved CSS variables */
@layer components {
  /* ===== ENHANCED TASK CARD STYLES ===== */
  .task-card {
    @apply flex flex-col p-4 sm:p-5 transition-all duration-200 relative text-left;
    min-height: calc(1.25 * 60px);
    width: 100%; /* Increased from 95% to 100% for better spacing */
    border-radius: var(--radius-xl, 0.75rem);
    background-color: hsl(var(--card, 0 0% 100%));
    color: hsl(var(--card-foreground, 240 10% 3.9%));
    /* Enhanced border with explicit fallback colors and improved variables */
    border: 1.5px solid hsl(var(--border, 240 5.9% 90%) / 0.4);
    border-color: rgba(148, 163, 184, 0.3); /* Explicit fallback for better visibility */
    /* Enhanced shadow with explicit values and CSS variable fallbacks */
    box-shadow: 
      var(--shadow, 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.06)),
      0 0 0 1px rgba(148, 163, 184, 0.1);
    backdrop-filter: blur(8px);
  }

  .task-card:hover {
    /* More visible hover shadow with CSS variable fallbacks */
    box-shadow: 
      var(--shadow-md, 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)),
      0 0 0 1px hsl(var(--primary, 221 77% 55%) / 0.3);
    border-color: hsl(var(--primary, 221 77% 55%) / 0.5);
    transform: translateY(-1px);
    background-color: hsl(var(--card, 0 0% 100%) / 0.9);
  }

  .task-card:focus-within {
    outline: 2px solid hsl(var(--primary, 221 77% 55%));
    outline-offset: 2px;
    box-shadow: 
      var(--shadow-lg, 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)),
      var(--shadow-focus, 0 0 0 3px rgba(54, 98, 227, 0.2));
  }

  @media (min-width: 640px) {
    .task-card {
      width: 100%;
      padding: 1.25rem 1.5rem; /* Increased padding for better breathing room */
    }
  }

  /* ===== UTILITY CLASSES FOR TASK STATES WITH FALLBACKS ===== */
  .task-card-expanded {
    border-color: hsl(var(--primary, 221 77% 55%) / 0.7);
    box-shadow: 
      var(--shadow-lg, 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)),
      0 0 0 2px hsl(var(--primary, 221 77% 55%) / 0.2);
    transform: translateY(-2px);
    background-color: hsl(var(--card, 0 0% 100%));
  }

  .task-card-complete {
    border-color: hsl(var(--success, 152 76% 40%) / 0.5);
    background-color: hsl(var(--success, 152 76% 40%) / 0.05);
    box-shadow: 
      var(--shadow, 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.06)),
      0 0 0 1px hsl(var(--success, 152 76% 40%) / 0.2);
  }

  .task-card-overdue {
    border-color: hsl(var(--destructive, 351 83% 53%) / 0.5);
    background-color: hsl(var(--destructive, 351 83% 53%) / 0.05);
    box-shadow: 
      var(--shadow, 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.06)),
      0 0 0 1px hsl(var(--destructive, 351 83% 53%) / 0.2);
  }

  .task-card-pending {
    border-color: hsl(var(--accent-yellow, 51 100% 57%) / 0.5);
    background-color: hsl(var(--accent-yellow, 51 100% 57%) / 0.05);
    box-shadow: 
      var(--shadow, 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.06)),
      0 0 0 1px hsl(var(--accent-yellow, 51 100% 57%) / 0.2);
  }

  .task-card-pinned {
    border-color: hsl(var(--primary, 221 77% 55%) / 0.7);
    background: linear-gradient(135deg, hsl(var(--card, 0 0% 100%)), hsl(var(--primary, 221 77% 55%) / 0.05));
    box-shadow: 
      var(--shadow-md, 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)),
      0 0 0 2px hsl(var(--primary, 221 77% 55%) / 0.1);
  }

  .task-card-pinned::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: var(--gradient-blue, linear-gradient(45deg, #3662E3, #5C85EE));
    border-radius: var(--radius-xl, 0.75rem) var(--radius-xl, 0.75rem) 0 0;
  }

  /* ===== SCROLLBAR HIDING ===== */
  .task-card-container::-webkit-scrollbar,
  .task-list::-webkit-scrollbar {
    display: none;
  }

  .task-card-container,
  .task-list {
    scrollbar-width: none;
    -ms-overflow-style: none;
  }

  /* ===== ENHANCED DARK MODE TASK CARDS ===== */
  .dark .task-card {
    background-color: hsl(var(--card));
    border: 1px solid hsl(var(--border) / 0.5);
    box-shadow: 
      0 1px 3px rgba(0, 0, 0, 0.3),
      0 1px 2px rgba(0, 0, 0, 0.2),
      0 0 0 1px hsl(var(--border) / 0.2);
  }

  .dark .task-card:hover {
    background-color: hsl(var(--card) / 0.8);
    border-color: hsl(var(--primary) / 0.7);
    box-shadow: 
      0 4px 6px -1px rgba(0, 0, 0, 0.3), 
      0 2px 4px -1px rgba(0, 0, 0, 0.2),
      0 0 0 1px hsl(var(--primary) / 0.3);
  }

  .dark .task-card-complete {
    background-color: hsl(var(--success) / 0.1);
    border-color: hsl(var(--success) / 0.3);
    box-shadow: 
      0 1px 3px rgba(0, 0, 0, 0.3),
      0 1px 2px rgba(0, 0, 0, 0.2),
      0 0 0 1px hsl(var(--success) / 0.3);
  }

  .dark .task-card-overdue {
    background-color: hsl(var(--destructive) / 0.1);
    border-color: hsl(var(--destructive) / 0.3);
    box-shadow: 
      0 1px 3px rgba(0, 0, 0, 0.3),
      0 1px 2px rgba(0, 0, 0, 0.2),
      0 0 0 1px hsl(var(--destructive) / 0.3);
  }

  /* ===== LIGHT MODE OVERRIDES ===== */
  .light .task-card {
    background-color: white;
    border: 1px solid #e2e8f0;
    color: #1a202c;
    box-shadow: 
      0 1px 3px rgba(0, 0, 0, 0.1),
      0 1px 2px rgba(0, 0, 0, 0.06);
  }

  .light .task-card:hover {
    border-color: hsl(var(--primary) / 0.3);
    box-shadow: 
      0 4px 6px rgba(0, 0, 0, 0.1),
      0 0 0 1px hsl(var(--primary) / 0.2);
  }

  /* ===== TASK CARD ANIMATIONS ===== */
  .task-card-enter {
    opacity: 0;
    transform: translateY(10px) scale(0.95);
  }

  .task-card-enter-active {
    opacity: 1;
    transform: translateY(0) scale(1);
    transition: opacity 0.3s ease, transform 0.3s ease;
  }

  .task-card-exit {
    opacity: 1;
    transform: translateY(0) scale(1);
  }

  .task-card-exit-active {
    opacity: 0;
    transform: translateY(-10px) scale(0.95);
    transition: opacity 0.2s ease, transform 0.2s ease;
  }
}
