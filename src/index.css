
/* CSS Reset - BEFORE Tailwind directives */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

*::before, 
*::after {
  box-sizing: inherit;
}

/* Base Tailwind directives */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Set dark mode as default */
html {
  @apply dark;
}

/* Initialize core Tailwind CSS variables */
*, ::before, ::after {
  /* Transform variables */
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-translate-z: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  
  /* Ring/outline variables */
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-inset: initial;
  
  /* Shadow variables */
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  
  /* Filter variables */
  --tw-blur: initial;
  --tw-brightness: initial;
  --tw-contrast: initial;
  --tw-grayscale: initial;
  --tw-hue-rotate: initial;
  --tw-invert: initial;
  --tw-saturate: initial;
  --tw-sepia: initial;
  --tw-drop-shadow: initial;
  
  /* Backdrop-filter variables - Explicitly initialize ALL required variables */
  --tw-backdrop-blur: initial;
  --tw-backdrop-brightness: initial;
  --tw-backdrop-contrast: initial;
  --tw-backdrop-grayscale: initial;
  --tw-backdrop-hue-rotate: initial;
  --tw-backdrop-invert: initial;
  --tw-backdrop-opacity: initial;
  --tw-backdrop-saturate: initial;
  --tw-backdrop-sepia: initial;
}

/* BUTTON UNRESET - Override Tailwind's Preflight reset */
/* This applies only to buttons WITHOUT shadcn component classes */
/* This must come AFTER Tailwind utilities to override them */
button:not([class*="bg-"]):not([class*="border-"]):not([class*="text-"]):not(.fab),
input[type="button"]:not([class*="bg-"]):not([class*="border-"]):not([class*="text-"]),
input[type="reset"]:not([class*="bg-"]):not([class*="border-"]):not([class*="text-"]),
input[type="submit"]:not([class*="bg-"]):not([class*="border-"]):not([class*="text-"]) {
  -webkit-appearance: button;
  appearance: button;
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
  border: 1px solid hsl(var(--primary));
  border-radius: 0.375rem;
  padding: 0.5rem 1rem;
  font-weight: 500;
  font-size: 0.875rem;
  line-height: 1.25rem;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;
  outline: none;
  transition: all 0.2s ease-in-out;
}

button:not([class*="bg-"]):not([class*="border-"]):not([class*="text-"]):not(.fab):hover,
input[type="button"]:not([class*="bg-"]):not([class*="border-"]):not([class*="text-"]):hover,
input[type="reset"]:not([class*="bg-"]):not([class*="border-"]):not([class*="text-"]):hover,
input[type="submit"]:not([class*="bg-"]):not([class*="border-"]):not([class*="text-"]):hover {
  background-color: hsl(var(--primary) / 0.9);
  transform: translateY(-1px);
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

button:not([class*="bg-"]):not([class*="border-"]):not([class*="text-"]):not(.fab):active,
input[type="button"]:not([class*="bg-"]):not([class*="border-"]):not([class*="text-"]):active,
input[type="reset"]:not([class*="bg-"]):not([class*="border-"]):not([class*="text-"]):active,
input[type="submit"]:not([class*="bg-"]):not([class*="border-"]):not([class*="text-"]):active {
  transform: translateY(0);
}

button:not([class*="bg-"]):not([class*="border-"]):not([class*="text-"]):not(.fab):focus-visible,
input[type="button"]:not([class*="bg-"]):not([class*="border-"]):not([class*="text-"]):focus-visible,
input[type="reset"]:not([class*="bg-"]):not([class*="border-"]):not([class*="text-"]):focus-visible,
input[type="submit"]:not([class*="bg-"]):not([class*="border-"]):not([class*="text-"]):focus-visible {
  outline: 2px solid hsl(var(--primary));
  outline-offset: 2px;
  box-shadow: 0 0 0 4px hsl(var(--primary) / 0.2);
}

button:not([class*="bg-"]):not([class*="border-"]):not([class*="text-"]):not(.fab):disabled,
input[type="button"]:not([class*="bg-"]):not([class*="border-"]):not([class*="text-"]):disabled,
input[type="reset"]:not([class*="bg-"]):not([class*="border-"]):not([class*="text-"]):disabled,
input[type="submit"]:not([class*="bg-"]):not([class*="border-"]):not([class*="text-"]):disabled {
  pointer-events: none;
  opacity: 0.5;
}

/* Import custom styles after Tailwind directives */
@import "./styles/base.css";
@import "./styles/components.css";
@import "./styles/utilities.css";

/* Global icon handling - improved for dark mode */
svg {
  fill: none;
  transition: stroke 0.3s ease, fill 0.3s ease;
}

/* Dark mode specific adjustments */
.dark {
  color-scheme: dark;
}

.light {
  color-scheme: light;
}

/* Ensure backdrop-blur works consistently */
.backdrop-blur-fix {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
}
